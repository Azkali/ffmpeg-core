diff --git a/ports/ffmpeg/portfile.cmake b/ports/ffmpeg/portfile.cmake
index 519b343af0..8bad512bdd 100644
--- a/ports/ffmpeg/portfile.cmake
+++ b/ports/ffmpeg/portfile.cmake
@@ -1,8 +1,9 @@
-vcpkg_from_github(
+vcpkg_from_gitlab(
+    GITLAB_URL "https://gitlab.com"
     OUT_SOURCE_PATH SOURCE_PATH
-    REPO ffmpeg/ffmpeg
-    REF "n${VERSION}"
-    SHA512 6b9a5ee501be41d6abc7579a106263b31f787321cbc45dedee97abf992bf8236cdb2394571dd256a74154f4a20018d429ae7e7f0409611ddc4d6f529d924d175
+    REPO l4t-community/switch-l4t-multimedia/FFmpeg
+    REF "${VERSION}-nvv4l2"
+    SHA512 e3bf6357031230463f6fa48cb5630bef089998add0baac64646d20f503332e386d040ab72b019ba8bc1355d960fd80d6fdb63e73be07797e8922dd4c1a488a76
     HEAD_REF master
     PATCHES
         0001-create-lib-libraries.patch
@@ -29,7 +30,21 @@ if (VCPKG_TARGET_ARCHITECTURE STREQUAL "x86" OR VCPKG_TARGET_ARCHITECTURE STREQU
     vcpkg_add_to_path("${NASM_EXE_PATH}")
 endif()
 
-set(OPTIONS "--enable-pic --disable-doc --enable-debug --enable-runtime-cpudetect --disable-autodetect")
+set(OPTIONS "--enable-pic --disable-doc --enable-runtime-cpudetect --disable-autodetect")
+
+# Only enable what is used by Vita3K
+string(APPEND OPTIONS " --disable-everything")
+string(APPEND OPTIONS " --enable-decoder=aac --enable-decoder=aac_latm --enable-decoder=atrac3 --enable-decoder=atrac3p --enable-decoder=atrac9 --enable-decoder=mp3 --enable-decoder=pcm_s16le --enable-decoder=pcm_s8")
+string(APPEND OPTIONS " --enable-decoder=mov --enable-decoder=h264 --enable-decoder=mpeg4 --enable-decoder=mpeg2video --enable-decoder=mjpeg --enable-decoder=mjpegb")
+string(APPEND OPTIONS " --enable-encoder=pcm_s16le")
+string(APPEND OPTIONS " --enable-encoder=ffv1 --enable-encoder=mpeg4 --enable-encoder=mjpeg")
+string(APPEND OPTIONS " --enable-muxer=avi")
+string(APPEND OPTIONS " --enable-demuxer=h264 --enable-demuxer=m4v --enable-demuxer=mp3 --enable-demuxer=mpegvideo --enable-demuxer=mpegps --enable-demuxer=mjpeg --enable-demuxer=mov --enable-demuxer=avi --enable-demuxer=aac --enable-demuxer=pmp --enable-demuxer=oma --enable-demuxer=pcm_s16le --enable-demuxer=pcm_s8 --enable-demuxer=wav")
+string(APPEND OPTIONS " --enable-parser=h264 --enable-parser=hevc --enable-parser=mpeg4video --enable-parser=mpegaudio --enable-parser=mpegvideo --enable-parser=mjpeg --enable-parser=aac --enable-parser=aac_latm")
+string(APPEND OPTIONS " --enable-protocol=file")
+string(APPEND OPTIONS " --enable-bsf=mjpeg2jpeg")
+string(APPEND OPTIONS " --enable-indev=dshow")
+string(APPEND OPTIONS " --enable-nvv4l2 --extra-cflags='-march=armv8-a+simd+crypto+crc -mtune=cortex-a57'")
 
 if(VCPKG_TARGET_IS_MINGW)
     if(VCPKG_TARGET_ARCHITECTURE STREQUAL "x86")
@@ -61,7 +76,7 @@ endif()
 vcpkg_cmake_get_vars(cmake_vars_file)
 include("${cmake_vars_file}")
 if(VCPKG_DETECTED_MSVC)
-    string(APPEND OPTIONS " --disable-inline-asm") # clang-cl has inline assembly but this leads to undefined symbols.
+    # string(APPEND OPTIONS " --disable-inline-asm") # clang-cl has inline assembly but this leads to undefined symbols.
     set(OPTIONS "--toolchain=msvc ${OPTIONS}")
     # This is required because ffmpeg depends upon optimizations to link correctly
     string(APPEND VCPKG_COMBINED_C_FLAGS_DEBUG " -O2")
@@ -510,6 +525,31 @@ else()
     set(WITH_THEORA OFF)
 endif()
 
+# V4L2 support
+if("v4l2" IN_LIST FEATURES)
+    if(NOT VCPKG_TARGET_IS_LINUX)
+        message(FATAL_ERROR "Feature v4l2 only supports Linux")
+    endif()
+    
+    find_program(PKG_CONFIG_EXECUTABLE pkg-config REQUIRED)
+    
+    # Set PKG_CONFIG_PATH to include system paths
+    set(ENV{PKG_CONFIG_PATH} "/usr/lib/pkgconfig:/usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig:$ENV{PKG_CONFIG_PATH}")
+    
+    # Check for libv4l2
+    execute_process(
+        COMMAND ${PKG_CONFIG_EXECUTABLE} --exists libv4l2
+        RESULT_VARIABLE LIBV4L2_FOUND
+        OUTPUT_QUIET ERROR_QUIET
+    )
+    
+    if(NOT LIBV4L2_FOUND EQUAL 0)
+        message(FATAL_ERROR "libv4l2 not found via pkg-config. Ensure libv4l-dev is installed.")
+    endif()
+    
+    message(STATUS "Found libv4l2 via pkg-config")
+endif()
+
 if("vorbis" IN_LIST FEATURES)
     set(OPTIONS "${OPTIONS} --enable-libvorbis")
     set(WITH_VORBIS ON)
@@ -713,6 +753,11 @@ if (NOT VCPKG_BUILD_TYPE OR VCPKG_BUILD_TYPE STREQUAL "release")
     # We use response files here as the only known way to handle spaces in paths
     set(crsp "${CURRENT_BUILDTREES_DIR}/${TARGET_TRIPLET}-rel/cflags.rsp")
     string(REGEX REPLACE "-arch [A-Za-z0-9_]+" "" VCPKG_COMBINED_C_FLAGS_RELEASE_SANITIZED "${VCPKG_COMBINED_C_FLAGS_RELEASE}")
+    if(VCPKG_TARGET_IS_OSX)
+        # macosx-version-min version is set with current macOS version. So replace them to 11.0
+        string(REGEX REPLACE "-mmacosx-version-min=[0-9]+.[0-9]+" "" VCPKG_COMBINED_C_FLAGS_RELEASE_SANITIZED "${VCPKG_COMBINED_C_FLAGS_RELEASE_SANITIZED}")
+        string(APPEND VCPKG_COMBINED_C_FLAGS_RELEASE_SANITIZED " -mmacosx-version-min=11.0")
+    endif()
     file(WRITE "${crsp}" "${VCPKG_COMBINED_C_FLAGS_RELEASE_SANITIZED}")
     set(ldrsp "${CURRENT_BUILDTREES_DIR}/${TARGET_TRIPLET}-rel/ldflags.rsp")
     string(REGEX REPLACE "-arch [A-Za-z0-9_]+" "" VCPKG_COMBINED_SHARED_LINKER_FLAGS_RELEASE_SANITIZED "${VCPKG_COMBINED_SHARED_LINKER_FLAGS_RELEASE}")
diff --git a/ports/ffmpeg/vcpkg.json b/ports/ffmpeg/vcpkg.json
index 62979244ba..2568642c22 100644
--- a/ports/ffmpeg/vcpkg.json
+++ b/ports/ffmpeg/vcpkg.json
@@ -650,6 +650,16 @@
     "version3": {
       "description": "Upgrade (L)GPL to version 3"
     },
+    "v4l2": {
+      "description": "Video4Linux2 support",
+      "supports": "linux",
+      "dependencies": [
+        {
+          "name": "vcpkg-pkgconfig-get-modules",
+          "host": true
+        }
+      ]
+    },
     "vorbis": {
       "description": "Vorbis en/decoding via libvorbis, native implementation exists",
       "dependencies": [
